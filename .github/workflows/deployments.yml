name: Deployments

on:
  workflow_call:
    secrets:
      DOMAIN: { required: true }
      HOST: { required: true }
      USER: { required: true }
      WORKING_PATH: { required: true }
      DATABASE_USER: { required: true }
      DATABASE_PASSWORD: { required: true }
      DATABASE_HOST: { required: true }
      DATABASE_PORT: { required: true }

jobs:
  # This action must create environment. URL of this environment will take from outputs
  deploy:
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Generate deployment config
        run: |
          yarn deployment pre-pm2 \
            --branch-ref "origin/${{ github.head_ref }}" \
            --domain "colibrijs.io" \
            --host "194.67.121.95" \
            --repository "${{ github.repositoryUrl }}" \
            --working-path "/root/" \
            --user "root" \
            --database-user "user" \
            --database-password "password" \
            --database-host "127.0.0.1" \
            --database-port 5432
      - if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' || github.event.action == 'reopened' }}
        name: "Setup deployment on the remote server"
        run: yarn pm2 deploy ./packages/deployment/dist/deployment.json branch setup
      - name: "Deploy branch to the remote server"
        run: yarn pm2 deploy ./packages/deployment/dist/deployment.json branch

  # This action must remove environment. URL of this environment will take from util
  remove:
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Generate deployment removing config
        run: |
          yarn deployment remove \
            --branch-ref "origin/${{ github.head_ref }}" \
            --host ${{ secrets.HOST }} \
            --repository "${{ github.repositoryUrl }}" \
            --working-path "${{ secrets.WORKING_PATH }}" \
            --user "${{ secrets.USER }}"
      - name: "Remove branch' deployment on the remote server"
        run: yarn pm2 deploy ./packages/deployment/dist/remove-deployment.json remove
